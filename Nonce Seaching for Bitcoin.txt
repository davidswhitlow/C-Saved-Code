using System;
using System.Text;
using System.Security.Cryptography;

namespace ConsoleApp4
{
    class Program
    {
        static void Main(string[] args)
        {
            string datastring = Console.ReadLine();
            decimal count = 0;
            int display = 0;
           string nonce = string.Empty;
            char[] nonceary = {' ', ' ', ' ', ' ' };
           for (int w =0;w<256;w++)
            {
                for (int x=0; x<256; x++)
                {
                    for (int y=0;y<256;y++)
                    {
                        for (int z=0;z<256;z++)
                        {
                            nonceary[0] = (char)w;
                            nonceary[1] = (char)x;
                            nonceary[2] = (char)y;
                            nonceary[3] = (char)z;

                            string g = new string(nonceary);
                            string plainData = datastring + g;
                            //***********************************************************
                            string hashedData = ComputeSha256Hash(plainData);
                            string Leading = hashedData.Substring(0, 8);
                            if (Leading == "00000000")
                            {
                                Console.WriteLine("O: {0}  H:{1}", plainData, hashedData);
                            }
                            //*******************************************************
                            display++;
                            
                            if (display >= 100000000)
                            {
                                Console.WriteLine("{0} - {1}", count, hashedData);
                                display = 0;
                            }
                             

                            // Console.WriteLine(g);
                            count++;

                        }
                    }
                }
               
            }
            Console.WriteLine(count);
        }
        static string ComputeSha256Hash(string rawData)
        {
            // Create a SHA256   
            using (SHA256 sha256Hash = SHA256.Create())
            {
                // ComputeHash - returns byte array  
                byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(rawData));

                // Convert byte array to a string   
                StringBuilder builder = new StringBuilder();
                for (int i = 0; i < bytes.Length; i++)
                {
                    builder.Append(bytes[i].ToString("x2"));
                }
                return builder.ToString();
            }
        }

    }
}
