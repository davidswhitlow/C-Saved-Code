using System;
using System.Text;
using System.Security.Cryptography;

namespace ConsoleApp4
{
    class Program
    {
        static void Main(string[] args)
        {
            string Prefix = string.Empty;
            string plainData = string.Empty;
            char[] g = new char[4];
            string nonce = string.Empty;
            decimal xx = 0;
            string InputData = Console.ReadLine();
            int Display = 0;
            int RawNumber = 0;

            for (int a=0; a<256;a++)
            {
                g[0] = Convert.ToChar(a);
                for (int b=0; b<256; b++)
                {
                    g[1] = Convert.ToChar(b);
                    for (int c=0; c<256;c++)
                    {
                        g[2] = Convert.ToChar(c);
                        for (int d = 0; d < 256; d++)
                        {
                            g[3] = Convert.ToChar(d);
                            nonce = new string(g);
                            RawNumber = (a * 16777216) + (b * 65536) + (c * 256) + d;
                            //Console.WriteLine("{0,-12}",RawNumber.ToString());
                            
                            plainData = InputData + nonce;
                            string hashedData = ComputeSha256Hash(plainData);
                            Prefix = hashedData.Substring(0, 8);
                          
                            if (Prefix == "00000000")
                            {
                                Console.WriteLine("Input: {0}  Hash: {1}  nonce: =>{2}<=", InputData, hashedData, nonce);
                                Console.WriteLine("Raw Number {0}  A: {1} B: {2} C: {3} D: {4}", RawNumber, a, b, c, d);
                                Console.ReadLine();
                            }
                            xx++;
                            Display++;
                            if (Display >= 10000000)
                            {
                                Console.WriteLine(".......{0}    Hash: {1}  Nonce: {2}   Raw Number {3}   A: {4}  B: {5}  C: {6}  D: {7}", xx,hashedData,nonce,RawNumber,a,b,c,d);
                                Display = 0;

                            }
                            
                            

                        }
                    }
                }
                
            }
           
        }
        static string ComputeSha256Hash(string rawData)
        {
            // Create a SHA256   
            using (SHA256 sha256Hash = SHA256.Create())
            {
                // ComputeHash - returns byte array  
                byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(rawData));

                // Convert byte array to a string   
                StringBuilder builder = new StringBuilder();
                for (int i = 0; i < bytes.Length; i++)
                {
                    builder.Append(bytes[i].ToString("x2"));
                }
                return builder.ToString();
            }
        }
    }
}

